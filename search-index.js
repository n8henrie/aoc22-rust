var searchIndex = JSON.parse('{\
"aoc":{"doc":"","t":[2,2,14,0,0,14,14,6,6,2],"n":["Error","Result","err","errors","files","localpath","parse_input","Error","Result","anyhow"],"q":["aoc","","","","","","","aoc::errors","","aoc::files"],"d":["","","","","","Return a path to the input, starting at <code>CARGO_MANIFEST_DIR</code> …","Parse input into a vec of specified type, or default to …","","",""],"i":[0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0],"p":[]},\
"d01":{"doc":"","t":[6,7,5,5,5,5],"n":["ElfMap","INPUT","main","parse_input","part1","part2"],"q":["d01","","","","",""],"d":["","","","","",""],"i":[0,0,0,0,0,0],"f":[0,0,[[],1],[2,[[1,[[5,[3,4]]]]]],[5,[[1,[4]]]],[5,4]],"p":[[6,"Result"],[15,"str"],[15,"usize"],[15,"u32"],[3,"HashMap"]]},\
"d02":{"doc":"","t":[12,12,3,17,13,4,4,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["0","1","Game","INPUT","Loss","Move","Outcome","Paper","Rock","Scissors","Tie","Win","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","eq","eq","from","from","from","from_str","from_str","into","into","into","main","outcome","part1","part2","score","score","score","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":["d02","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","",""],"i":[5,5,0,0,3,0,0,1,1,1,3,3,5,1,3,5,1,3,1,1,1,3,5,1,3,5,1,5,1,3,0,5,0,0,5,1,3,1,5,1,3,5,1,3,5,1,3],"f":[0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[[]],[[1,1],2],[[3,3],2],[[]],[[]],[[]],[4,[[6,[5]]]],[4,[[6,[1]]]],[[]],[[]],[[]],[[],7],[5,3],[[],8],[[],[[7,[8]]]],[5,8],[1,8],[3,8],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],9],[[],9],[[],9]],"p":[[4,"Move"],[15,"bool"],[4,"Outcome"],[15,"str"],[3,"Game"],[4,"Result"],[6,"Result"],[15,"u32"],[3,"TypeId"]]},\
"d03":{"doc":"","t":[12,12,17,6,6,3,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11],"n":["0","1","INPUT","ItemSet","ItemType","RuckSack","borrow","borrow_mut","eq","fmt","from","from_str","in_common","into","main","part1","part2","score","try_from","try_into","type_id"],"q":["d03","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","",""],"i":[1,1,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1],"f":[0,0,0,0,0,0,[[]],[[]],[[1,1],2],[[1,3],4],[[]],[5,[[6,[1]]]],[1,7],[[]],[[],8],[5,[[8,[9]]]],[5,[[8,[9]]]],[1,[[8,[9]]]],[[],6],[[],6],[[],10]],"p":[[3,"RuckSack"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"str"],[4,"Result"],[8,"Iterator"],[6,"Result"],[15,"u32"],[3,"TypeId"]]},\
"d04":{"doc":"","t":[12,12,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,11],"n":["0","0","1","ElfPair","Section","borrow","borrow","borrow_mut","borrow_mut","duplicated_effort","eq","eq","fmt","fmt","from","from","from_str","from_str","into","into","main","part1","part2","partial_overlaps","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["d04","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","",""],"i":[3,1,1,0,0,3,1,3,1,1,3,1,3,1,3,1,3,1,3,1,0,0,0,1,3,1,3,1,3,1],"f":[0,0,0,0,0,[[]],[[]],[[]],[[]],[1,2],[[3,3],2],[[1,1],2],[[3,4],5],[[1,4],5],[[]],[[]],[6,[[7,[3]]]],[6,[[7,[1]]]],[[]],[[]],[[],8],[[],9],[[],9],[1,2],[[],7],[[],7],[[],7],[[],7],[[],10],[[],10]],"p":[[3,"ElfPair"],[15,"bool"],[3,"Section"],[3,"Formatter"],[6,"Result"],[15,"str"],[4,"Result"],[6,"Result"],[15,"usize"],[3,"TypeId"]]},\
"d05":{"doc":"","t":[12,12,6,17,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,5,12,5,5,5,12,11,11,11,11,11,11,11,11,11,11,11],"n":["0","0","Crate","INPUT","Instruction","Ship","Stack","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","eq","eq","fmt","fmt","fmt","from","from","from","from","from_str","from_str","into","into","into","main","mv","parse_input","part1","part2","to","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":["d05","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","",""],"i":[1,2,0,0,0,0,0,1,2,4,1,2,4,1,2,1,2,1,2,4,1,2,4,1,2,4,4,1,4,1,2,4,0,4,0,0,0,4,1,2,1,2,4,1,2,4,1,2,4],"f":[0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[[]],[[]],[[1,1],3],[[2,2],3],[[4,4],3],[[1,5],6],[[2,5],6],[[4,5],6],[[]],[[]],[[]],0,[7,[[8,[1]]]],[7,[[8,[4]]]],[[]],[[]],[[]],[[],9],0,[7,9],[1,[[9,[10]]]],[1,[[9,[10]]]],0,[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],11],[[],11],[[],11]],"p":[[3,"Ship"],[3,"Stack"],[15,"bool"],[3,"Instruction"],[3,"Formatter"],[6,"Result"],[15,"str"],[4,"Result"],[6,"Result"],[3,"String"],[3,"TypeId"]]},\
"d06":{"doc":"","t":[17,5,5,5,5],"n":["INPUT","main","part1","part2","scan_buffer"],"q":["d06","","","",""],"d":["","","","",""],"i":[0,0,0,0,0],"f":[0,[[],1],[2,[[1,[3]]]],[2,[[1,[3]]]],[[2,3],[[1,[3]]]]],"p":[[6,"Result"],[15,"str"],[15,"usize"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
